/* 
 * NEM SPs
 *
 * TestNet SP API Endpoint
 *
 * OpenAPI spec version: v0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using io.spfs.NeutoSpfs.Api;
using io.spfs.NeutoSpfs.Model;
using io.spfs.NeutoSpfs.Client;
using System.Reflection;

namespace io.spfs.NeutoSpfs.Test
{
    /// <summary>
    ///  Class for testing GeneratedAccount
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class GeneratedAccountTests
    {
        // TODO uncomment below to declare an instance variable for GeneratedAccount
        //private GeneratedAccount instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of GeneratedAccount
            //instance = new GeneratedAccount();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GeneratedAccount
        /// </summary>
        [Test]
        public void GeneratedAccountInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" GeneratedAccount
            //Assert.IsInstanceOfType<GeneratedAccount> (instance, "variable 'instance' is a GeneratedAccount");
        }

        /// <summary>
        /// Test the property 'Account'
        /// </summary>
        [Test]
        public void AccountTest()
        {
            // TODO unit test for the property 'Account'
        }
        /// <summary>
        /// Test the property 'EncodedAddress'
        /// </summary>
        [Test]
        public void EncodedAddressTest()
        {
            // TODO unit test for the property 'EncodedAddress'
        }
        /// <summary>
        /// Test the property 'EncodedPrivateKey'
        /// </summary>
        [Test]
        public void EncodedPrivateKeyTest()
        {
            // TODO unit test for the property 'EncodedPrivateKey'
        }
        /// <summary>
        /// Test the property 'EncodedPublicKey'
        /// </summary>
        [Test]
        public void EncodedPublicKeyTest()
        {
            // TODO unit test for the property 'EncodedPublicKey'
        }
        /// <summary>
        /// Test the property 'KeyPair'
        /// </summary>
        [Test]
        public void KeyPairTest()
        {
            // TODO unit test for the property 'KeyPair'
        }

    }

}
