{"swagger":"2.0","info":{"description":"TestNet SP API Endpoint","version":"v0.0.1","title":"NEM SPs"},"host":"localhost:8082","basePath":"/sp","tags":[{"name":"Search","description":"Search Controller"},{"name":"Publish","description":"Publish Controller"},{"name":"Downloads","description":"Download Controller"},{"name":"DataHash","description":"Data Hash Controller"},{"name":"Account","description":"Account Controller"},{"name":"Nodes","description":"Node Controller"}],"schemes":["http","https"],"paths":{"/account/generate":{"get":{"tags":["Account"],"summary":"Generate a new Address along with Public and Private Keys","description":"This endpoint returns the newly generated Address from NEM Platform","operationId":"generateAccountUsingGET","consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"GeneratedAccount object","schema":{"$ref":"#/definitions/GeneratedAccount"}},"400":{"description":"Generation failed"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal server error"}}}},"/account/get/{nemAddress}":{"get":{"tags":["Account"],"summary":"Get the NEM Address Details","description":"This endpoint returns the NEM Address/Account Information of a given address","operationId":"getNemAddressDetailsUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"nemAddress","in":"path","description":"The NEM Address without the dash ('-')","required":false,"type":"string"}],"responses":{"200":{"description":"Address AccountMetaDataPair","schema":{"$ref":"#/definitions/AccountMetaDataPair"}},"400":{"description":"Address retrieval failed"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal server error"}}}},"/datahash/byte-array/hashonly":{"post":{"tags":["DataHash"],"summary":"Generates the encrypted datahash of a file (in the form of byte array) only.","description":"The endpoint can be used to get the datahash of the file without pinning the file on the P2P Network","operationId":"generateByteArrayDataHashOnlyUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"fileName","in":"query","description":"File name","required":false,"type":"string"},{"name":"byteArrayFile","in":"query","description":"The Byte Array File","required":false,"type":"string","format":"byte"}],"responses":{"200":{"description":"Hexed Message. Contains the BinaryTransactionEncryptedMessage Data structure.","schema":{"type":"string"}},"400":{"description":"DataHash Generation has failed"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal server error"}}}},"/datahash/generate":{"post":{"tags":["DataHash"],"summary":"Generates the encrypted datahash and uploads the file in the process.","description":"This endpoint can be used to generate the transaction along with the data hash with the private key signature.","operationId":"generateHashAndExposeFileToNetworkUsingPOST","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"file","in":"formData","description":"The Multipart File","required":false,"type":"file"}],"responses":{"200":{"description":"Hexed Message. Contains the BinaryTransactionEncryptedMessage Data structure.","schema":{"type":"string"}},"400":{"description":"DataHash Generation has failed"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal server error"}}}},"/datahash/generate-sign":{"post":{"tags":["DataHash"],"summary":"This endpoint can be used to generate the transaction along with the data hash with the private key signature.","operationId":"generateHashExposeFileToNetworkBuildAndSignUsingPOST","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"x-pvkey","in":"header","description":"Sender Private Key","required":false,"type":"string"},{"name":"x-pubkey","in":"header","description":"Receiver Public Key","required":false,"type":"string"},{"name":"messageType","in":"query","description":"Message Type ( PLAIN or SECURE )","required":false,"type":"string"},{"name":"file","in":"formData","description":"The Multipart File","required":false,"type":"file"}],"responses":{"200":{"description":"Successfully Generated the Signed Transaction","schema":{"$ref":"#/definitions/RequestAnnounceDataSignature"}},"400":{"description":"DataHash Generation has failed"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal server error"}}}},"/datahash/generate/byte-array":{"post":{"tags":["DataHash"],"summary":"Generates the encrypted datahash and uploads the file (in the form of byte array) in the process.","description":"The endpoint that can be used to expose and generate the data hash of a given file. The data hash can then be used to create a secured message, that can then be signed by the SPFS Java Client App. Limit: 5MB.","operationId":"generateHashAndExposeByteArrayFileToNetworkUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"fileName","in":"query","description":"File name","required":false,"type":"string"},{"name":"byteArrayFile","in":"query","description":"The Byte Array File","required":false,"type":"string","format":"byte"}],"responses":{"200":{"description":"Hexed Message. Contains the BinaryTransactionEncryptedMessage Data structure.","schema":{"type":"string"}},"400":{"description":"DataHash Generation has failed"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal server error"}}}},"/datahash/hashonly":{"post":{"tags":["DataHash"],"summary":"Generates the encrypted datahash of a file only.","description":"The endpoint can be used to get the datahash of the file without pinning the file on the P2P Network","operationId":"generateDataHashOnlyUsingPOST","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"file","in":"formData","description":"The Multipart File","required":false,"type":"file"}],"responses":{"200":{"description":"Hexed Message. Contains the BinaryTransactionEncryptedMessage Data structure.","schema":{"type":"string"}},"400":{"description":"DataHash Generation has failed"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal server error"}}}},"/download/data/plain/{nemhash}":{"get":{"tags":["Downloads"],"summary":"Download resource/file using NEM Transaction Hash","description":"This endpoint returns either a byte array format of the actual file OR a JSON format GenericMessageResponse.","operationId":"downloadPlainMessageFileUsingNemHashUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ResponseEntity"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/download/data/secure/rawbytes/{nemhash}":{"get":{"tags":["Downloads"],"summary":"Download resource/file using NEM Transaction Hash","description":"This endpoint returns a byte array format of the actual file","operationId":"downloadRawBytesSecureMessageFileUsingNemHashUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"x-pvkey","in":"header","description":"The Sender or Receiver's Private Key","required":false,"type":"string"},{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string","format":"byte"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/download/data/secure/{nemhash}":{"get":{"tags":["Downloads"],"summary":"Download resource/file using NEM Transaction Hash","description":"This endpoint returns either a byte array format of the actual file OR a JSON format GenericMessageResponse.","operationId":"downloadSecureMessageFileUsingNemHashUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"x-pvkey","in":"header","description":"The Sender or Receiver's Private Key","required":false,"type":"string"},{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ResponseEntity"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/download/data/{nemhash}":{"get":{"tags":["Downloads"],"summary":"Download resource/file using NEM Transaction Hash","description":"The endpoint returns the Transaction that has the message with the data hash.","operationId":"downloadFileUsingNemHashAndEncryptedHashUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"x-pubkey","in":"header","description":"The Sender or Receiver's Public Key","required":false,"type":"string"},{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ResponseEntity"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/node/check":{"get":{"tags":["Nodes"],"summary":"Check if the Storage Node is up and running.","description":"This endpoint is used to check if the P2P Storage Node instance is either alive or down.","operationId":"checkNodeUsingGET","consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/node/info":{"get":{"tags":["Nodes"],"summary":"Get Storage Node Information","description":"This endpoint returns the information of the P2P Storage Node","operationId":"getNodeInfoUsingGET","consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/publish/announce":{"post":{"tags":["Publish"],"summary":"Announce the DataHash to NEM/P2P Storage and P2P Database","description":"Endpoint that can be use to announce the data hash transaction. This will grab the signed BinaryTransaferTransaction and create the P2P Database Entry for the specific data hash / transaction.","operationId":"announceRequestPublishDataSignatureUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"requestAnnounceDataSignature","description":"The Request Announce Data Signature Json Format","required":false,"schema":{"$ref":"#/definitions/RequestAnnounceDataSignature"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ResponseEntity"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/publish/announce/return-hash-only":{"post":{"tags":["Publish"],"summary":"Announce the DataHash to NEM/P2P Storage and P2P Database and only returns the Nem Transaction Hash","description":"Endpoint that can be use to announce the data hash transaction. This will grab the signed BinaryTransaferTransaction and create the P2P Database Entry for the specific data hash / transaction.","operationId":"announceRequestPublishDataSignatureReturnHashOnlyUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"requestAnnounceDataSignature","description":"The Request Announce Data Signature Json Format","required":false,"schema":{"$ref":"#/definitions/RequestAnnounceDataSignature"}}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/publish/multi/to/{address}":{"post":{"tags":["Publish"],"summary":"Store multiple files that can only be access by the given address","description":"This endpoint can be used to share multiple files to a specific address only. Note that multiple files in this context will create multiple transaction (1 transaction = 1 file).","operationId":"publishAndSendMultipleFilesToAddressUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"x-pvkey","in":"header","description":"The Sender's Private Key","required":false,"type":"string"},{"name":"address","in":"path","description":"The Receiver's Address without dash ('-')","required":false,"type":"string"},{"name":"messageType","in":"query","description":"Message Type ( PLAIN or SECURE )","required":false,"type":"string"},{"name":"files","in":"query","description":"The List of Multipart File","required":false,"type":"array","items":{"type":"file"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ResponseEntity"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/publish/single/to/addresses":{"post":{"tags":["Publish"],"summary":"Store a single file that can only be access by the given addresses","description":"This endpoint can be used to exclusively share files across a set of given addresses. This means that the file that's published here can only be viewed or downloaded by the given addresses including the uploader.","operationId":"publishAndSendSingleFileToAddressesUsingPOST","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"x-pvkey","in":"header","description":"The Sender's Private Key","required":false,"type":"string"},{"name":"addresses","in":"query","description":"The List of receiving Addresses without dash ('-')","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"messageType","in":"query","description":"Message Type ( PLAIN or SECURE )","required":false,"type":"string"},{"name":"file","in":"formData","description":"The Multipart File","required":false,"type":"file"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ResponseEntity"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/publish/single/to/{address}":{"post":{"tags":["Publish"],"summary":"Store a single file that can only be access by the given address","description":"This endpoint can be used to share a file to a specific address only.","operationId":"publishAndSendSingleFileToAddressUsingPOST","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"x-pvkey","in":"header","description":"The Sender's Private Key","required":false,"type":"string"},{"name":"address","in":"path","description":"The Receiver's Address without dash ('-')","required":false,"type":"string"},{"name":"messageType","in":"query","description":"Message Type ( PLAIN or SECURE )","required":false,"type":"string"},{"name":"file","in":"formData","description":"The Multipart File","required":false,"type":"file"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ResponseEntity"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/search/data/{nemhash}":{"get":{"tags":["Search"],"summary":"NEM Transaction Hash based file lookup.","description":"This endpoint can be use to lookup a specific upload/store entry using the NEM Transaction Hash. Given this, only the owner or intended receiver can only access the entry using the public key","operationId":"searchAssetWithNemHashUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"x-pubkey","in":"header","description":"The Sender or Receiver's Public Key","required":false,"type":"string"},{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/search/text/{searchKey}":{"get":{"tags":["Search"],"summary":"Key/Text-based search of available files.","description":"This endpoint can be used to exclusively search for all files that are associated to the public key specified.","operationId":"searchAssetWithKeyUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"x-pubkey","in":"header","description":"The Sender or Receiver's Public Key","required":false,"type":"string"},{"name":"searchKey","in":"path","description":"The Search Key","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/search/transaction/plain/{nemhash}":{"get":{"tags":["Search"],"summary":"NEM Transaction Hash based file lookup.","description":"This endpoint can be used to grab the actual Signed and Confirmed TransferTransaction structure that can then be cast to the object. It has the Encrypted and Encoded Payload.","operationId":"grabPlainMessageTransactionUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BinaryTransactionEncryptedMessage"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/search/transaction/secure/{nemhash}":{"get":{"tags":["Search"],"summary":"NEM Transaction Hash based file lookup.","description":"This endpoint can be used to grab the actual Signed and Confirmed TransferTransaction structure that can then be cast to the object. It has the Encrypted and Encoded Payload.","operationId":"grabSsecureMessageTransactionUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"x-pvkey","in":"header","description":"The Sender or Receiver's Private Key","required":false,"type":"string"},{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BinaryTransactionEncryptedMessage"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}},"/search/transaction/{nemhash}":{"get":{"tags":["Search"],"summary":"NEM Transaction Hash based file lookup.","description":"This endpoint can be used to grab the actual Signed and Confirmed TransferTransaction structure that can then be cast to the object. It has the Encrypted and Encoded Payload.","operationId":"grabTransactionUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"x-pubkey","in":"header","description":"The Sender or Receiver's Public Key","required":false,"type":"string"},{"name":"nemhash","in":"path","description":"The NEM Transaction Hash","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"Not Found"},"405":{"description":"Method Not Allowed"},"406":{"description":"Not Acceptable"},"412":{"description":"Precondition Failed"},"415":{"description":"Unsupported Media Type"},"500":{"description":"Internal Server Error"}}}}},"definitions":{"Account":{"type":"object","properties":{"address":{"$ref":"#/definitions/Address"}}},"AccountInfo":{"type":"object","properties":{"address":{"$ref":"#/definitions/Address"},"balance":{"$ref":"#/definitions/Amount"},"importance":{"type":"number","format":"double"},"keyPair":{"$ref":"#/definitions/KeyPair"},"label":{"type":"string"},"multisigInfo":{"$ref":"#/definitions/MultisigInfo"},"numHarvestedBlocks":{"$ref":"#/definitions/BlockAmount"},"vestedBalance":{"$ref":"#/definitions/Amount"}}},"AccountMetaData":{"type":"object","properties":{"cosignatories":{"type":"array","items":{"$ref":"#/definitions/AccountInfo"}},"cosignatoryOf":{"type":"array","items":{"$ref":"#/definitions/AccountInfo"}},"remoteStatus":{"type":"string","enum":["REMOTE","ACTIVATING","ACTIVE","DEACTIVATING","INACTIVE"]},"status":{"type":"string","enum":["UNKNOWN","LOCKED","UNLOCKED"]}}},"AccountMetaDataPair":{"type":"object","properties":{"entity":{"$ref":"#/definitions/AccountInfo"},"metaData":{"$ref":"#/definitions/AccountMetaData"}}},"Address":{"type":"object","properties":{"encoded":{"type":"string"},"publicKey":{"$ref":"#/definitions/PublicKey"},"valid":{"type":"boolean"},"version":{"type":"string","format":"byte"}}},"Amount":{"type":"object","properties":{"numMicroNem":{"type":"integer","format":"int64"},"numNem":{"type":"integer","format":"int64"}}},"BinaryTransactionEncryptedMessage":{"type":"object","properties":{"hash":{"type":"string"},"name":{"type":"string"},"size":{"type":"integer","format":"int32"},"type":{"type":"string"}}},"BlockAmount":{"type":"object","properties":{"raw":{"type":"integer","format":"int64"}}},"GeneratedAccount":{"type":"object","properties":{"account":{"$ref":"#/definitions/Account"},"encodedAddress":{"type":"string"},"encodedPrivateKey":{"type":"string"},"encodedPublicKey":{"type":"string"},"keyPair":{"$ref":"#/definitions/KeyPair"}}},"KeyPair":{"type":"object","properties":{"privateKey":{"$ref":"#/definitions/PrivateKey"},"publicKey":{"$ref":"#/definitions/PublicKey"}}},"MultisigInfo":{"type":"object","properties":{"cosignatoriesCount":{"type":"integer","format":"int32"},"minCosignatories":{"type":"integer","format":"int32"}}},"PrivateKey":{"type":"object","properties":{"raw":{"type":"integer"}}},"PublicKey":{"type":"object","properties":{"raw":{"type":"string","format":"byte"}}},"RequestAnnounceDataSignature":{"type":"object","properties":{"addressFrom":{"type":"string"},"addressTo":{"type":"string"},"data":{"type":"string"},"hexedEncryptedMessage":{"type":"string"},"signature":{"type":"string"}}},"ResponseEntity":{"type":"object","properties":{"body":{"type":"object"},"statusCode":{"type":"string","enum":["100","101","102","103","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511"]},"statusCodeValue":{"type":"integer","format":"int32"}}}}}
